/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> nums;
    int rangeSumBST(TreeNode* root, int low, int high) {
        dfs(root, low, high);
        return sum(nums);
    }void dfs(TreeNode* root, int l, int h){
        if (root == nullptr){
            return;
        }if(root->val <= h && root->val >= l){
            nums.push_back(root->val);
        }dfs(root->left, l, h);
        dfs(root->right, l, h);
    }int sum(vector<int> v){
        int s = 0;
        for(int i = 0; i < v.size(); i++){
            s += v[i];
        }return s;
    }
};