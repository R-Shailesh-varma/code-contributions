class Solution {
public:
    int firstPos(vector<int> nums, int target){
        int ans = -1;
        int i =0;
        int j = nums.size() -1;
        int mid;
        while(i <= j){
            mid = i + (j - i) / 2;
            if(nums[mid] == target){
                ans = mid;
                j = j- 1;
            }else if(nums[mid] > target){
                j = mid - 1; 
            }else{
                i = mid + 1;
            }
        }return ans;
    }
    int lastPos(vector<int> nums, int target){
        int i =0;
        int ans = -1;
        int j = nums.size() -1;
        int mid;
        while(i <= j){
            mid = i + (j - i) / 2;
            if(nums[mid] == target){
                ans = mid;
                i = i + 1;
            }else if(nums[mid] > target){
                j = mid - 1; 
            }else{
                i = mid + 1;
            }
        }return ans;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> pos;
        pos.push_back(firstPos(nums, target));
        pos.push_back(lastPos(nums, target));
        return pos;
    }
};