/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
vector<int> vec;
    TreeNode* increasingBST(TreeNode* root) {
        inOrder(root);
        TreeNode* NewRoot = new TreeNode(vec[0]);
        TreeNode* temp = NewRoot;
        for(int i =1; i< vec.size(); i++){
            temp->right = new TreeNode(vec[i]);
            temp = temp->right;
        }return NewRoot;
    }
    void inOrder(TreeNode* root){
        if(root==nullptr){
            return;
        }inOrder(root->left);
        vec.push_back(root->val);
        inOrder(root->right);
    }
};