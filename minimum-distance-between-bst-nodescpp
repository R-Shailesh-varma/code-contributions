/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> vec;
    int minDiffInBST(TreeNode* root) {
        inOrder(root);
        int minn = INT_MAX;
        for(int i =0; i < vec.size()-1; i++){
            minn = min(minn,vec[i+1]-vec[i]);
        }
        return minn;
    }
    void inOrder(TreeNode* root){
        if(root==nullptr){
            return;
        }inOrder(root->left);
        vec.push_back(root->val);
        inOrder(root->right);
    }
};