/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> vec;
    void dfs(TreeNode* root){
        if(root == nullptr){
            return;
        }vec.push_back(root->val);
        dfs(root->left);
        dfs(root->right);
    }
    bool findTarget(TreeNode* root, int k) {
        dfs(root);
        sort(vec.begin(), vec.end());
        int i = 0;
        int j = vec.size()-1;
        while(i < j){
            if(vec[i]+vec[j] == k){
                return true;
            }else if(vec[i]+vec[j] > k){
                j--;
            }else{
                i++;
            }
        }return false;
    }
};