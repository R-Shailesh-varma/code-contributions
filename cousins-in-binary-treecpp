/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        int Xlev = -2;
        int Ylev = -1;
        queue<pair<TreeNode*, int>> q;
        q.push({root, 0});
        while(!q.empty()){
            TreeNode* node = q.front().first;
            int lev = q.front().second;
            if(node->left != nullptr){
                q.push({node->left,lev + 1});
            }
            if(node->right != nullptr){
                q.push({node->right,lev + 1});
            }
            if(node->left && node->right && node->left->val == x && node->right->val == y){
                return false;
            }
            if(node->left && node->right && node->left->val == y && node->right->val == x){
                return false;
            }
            if(node->val == x){
                Xlev = lev;
            }
            if(node->val == y){
                Ylev = lev;
            }q.pop();
            
        }
        return (Xlev == Ylev);
    }
};