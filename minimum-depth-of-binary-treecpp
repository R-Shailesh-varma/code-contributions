/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDep = INT_MAX;
    void dfs(TreeNode* root, int sum){
        if(root == nullptr){
            return;
        }
        sum += 1;
        if(root->left == nullptr && root->right == nullptr){
            minDep = min(minDep, sum);
        }
        dfs(root->left, sum);
        dfs(root->right, sum);
    } 
    int minDepth(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        dfs(root, 0);
        return minDep;
    }
};