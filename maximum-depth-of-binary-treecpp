/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        queue<pair<TreeNode*, int>> q;
        int lev = 1;
        q.push({root, lev});
        while(!q.empty()){
            TreeNode* curNode = q.front().first;
            lev = q.front().second;
            q.pop();
            if(curNode->left){
                q.push({curNode->left, lev+1});
            }
            if(curNode->right){
                q.push({curNode->right, lev+1});
            }
        }return lev;
    }
};