/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> avg;
        double mean = 0;
        int count = 0;
        queue<pair<TreeNode*, int>> q;
        q.push({root,1});
        while(!q.empty()){
            TreeNode* temp = q.front().first;
            int lev = q.front().second;
            mean += temp->val;
            count+= 1;
            q.pop();
            if(q.front().second != lev && q.front().first != nullptr){
                avg.push_back(mean/count);
                mean = 0;
                count = 0;
            }if(temp->left != nullptr){
                q.push({temp->left, lev+1});
            }if(temp->right!= nullptr){
                q.push({temp->right, lev+1});
            }
        }
        // avg.push_back(mean/count);
        return avg;
    }
};