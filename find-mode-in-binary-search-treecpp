/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    unordered_map<int, int> map;
    vector<int> v;
    vector<int> findMode(TreeNode* root) {
        if(root == nullptr){
            return v;
        }
        preOrder(root);
        int maxNode = 0;
        for(const auto& pair: map){
            maxNode = max(maxNode, pair.second);
        }for(const auto& pair: map){
            if(pair.second == maxNode){
                v.push_back(pair.first);
            }
        }return v;
    }void preOrder(TreeNode* root){
        if(root == nullptr){
            return;
        }
        map[root->val] += 1;
        preOrder(root->left);
        preOrder(root->right);
    }
};