/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> sums;
    int sumNumbers(TreeNode* root) {
        int sum = 0;
        vector<int> v;
        allPaths(root, v);
        for(int i = 0; i < sums.size(); i++){
            sum += sums[i];
        }return sum;
    }void allPaths(TreeNode* root, vector<int> v){
        if(root == nullptr){
            return;
        }v.push_back(root->val);
        if(root->left == nullptr && root->right == nullptr){
            int sum = 0;
            for(int i = 0; i < v.size(); i++){
                sum = sum*10 + v[i];
            }sums.push_back(sum);
        }if(root->left != nullptr){
            allPaths(root->left, v);
        }if(root->right != nullptr){
            allPaths(root->right, v);
        }
    }
};